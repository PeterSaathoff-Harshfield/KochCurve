/koch
{
	dup 0 eq not{
		5 1 roll
		thirds
		drawfirstsegment
		drawmiddlespike
		drawthirdsegment
		9 {pop} repeat
	}
	{
		pop
		line
		} ifelse
}
def

/line
{
newpath
moveto
lineto
closepath
stroke
}
def

/thirds
{
	exch
	4 3 roll
	firstsegment
	3 1 roll
	thirdsegment
	6 4 roll
	exch
	firstsegment
	3 1 roll
	thirdsegment
	reorder
}
def

/firstsegment
{
	2 copy
	dup
	3 1 roll
	sub
	3 div
	add
}
def

/thirdsegment
{
	2 copy
	exch
	dup
	3 1 roll
	exch
	sub
	3 div
	sub
}
def

/reorder
{
	exch
	6 5 roll
	exch
	8 2 roll
	3 2 roll
	5 1 roll
	4 1 roll
	exch
	4 1 roll
}
def

/drawfirstsegment
{
	8 4 roll
	4 copy
	12 4 roll
	13 12 roll
	dup
	14 1 roll
	1 sub
	koch
}
def

/drawthirdsegment
{
	4 copy
	13 12 roll
	dup
	14 1 roll
	1 sub
	koch
}
def

/drawmiddlespike
{
	6 2 roll
	distance
	transform
	6 4 roll
	2 copy
	8 2 roll
	addvectors
	6 4 roll
	4 2 roll
	4 copy
	15 14 roll
	dup
	16 1 roll
	1 sub
	koch
	6 4 roll
	4 copy
	15 14 roll
	dup
	16 1 roll
	1 sub
	koch
	4 2 roll
	2 {pop} repeat
	6 4 roll
}
def

/addvectors
{
	exch
	4 3 roll
	add
	3 1 roll
	add
}
def

/distance
{
	4 copy
	exch
	4 3 roll
	sub
	3 1 roll
	exch
	sub
}
def

/transform
{
	dup
	3 2 roll
	dup
	60 cos mul
	4 3 roll
	60 sin -1 mul mul
	add
	3 1 roll
	60 sin mul
	exch
	60 cos mul
	add
}
def


% start x, start y
% end x, end y
% number of recursive levels (resolution)

50 100 500 700 8 koch
% 50 100 600 110 3 koch
% 500 100 200 700 6 koch
% 500 100 200 150 7 koch

% each increase of the recusion level multiplies to runtime by 3
% values > 8 takea a long time